jms_security_extra:
    secure_all_services: false
    expressions: true

security:
    encoders:
        "FOS\UserBundle\Model\UserInterface": sha512
    role_hierarchy:
        ROLE_ADMINISTRACION:  [ROLE_VEGA_ADMIN_PACIENTES_ADMIN,ROLE_VEGA_ADMIN_ATENCIONES_EDITOR,ROLE_VEGA_ADMIN_SUCURSALES_GUEST,ROLE_VEGA_ADMIN_OSS_GUEST,ROLE_VEGA_ADMIN_LOCALIDADES_GUEST,ROLE_VEGA_ADMIN_PROVINCIAS_GUEST,ROLE_VEGA_ADMIN_MEDICOS_ADMIN,ROLE_SONATA_CLASSIFICATION_ADMIN_TAG_ADMIN]
        ROLE_MEDICO:          [ROLE_VEGA_ADMIN_PACIENTES_ADMIN,ROLE_VEGA_ADMIN_ATENCIONES_EDITOR,ROLE_VEGA_ADMIN_PRACTICAS_ADMIN,ROLE_SONATA_CLASSIFICATION_ADMIN_TAG_ADMIN,ROLE_SONATA_MEDIA_ADMIN_MEDIA_ADMIN]
        ROLE_ADMIN:           [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_SUPER_ADMIN:     [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        fos_userbundle:
            id: fos_user.user_manager


    acl:
        connection: default

    firewalls:
        # -> custom firewall for the admin area of the URL      
        admin:
            switch_user:        true
            context:            user
            pattern:            /admin(.*)
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
                use_referer:    true
                default_target_path: /admin
            logout:
                path:           /admin/logout
                target:         /admin/login

            anonymous:    true
        # -> end custom configuration

        # defaut login area for standard users
        main:
            switch_user:        true
            context:            user
            pattern:            .*
            form_login:
                provider:       fos_userbundle
                login_path:     /login
                use_forward:    false
                check_path:     /login_check
                failure_path:   null
                default_target_path: /admin
            logout:             true
            anonymous:          true

    access_control:
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/_wdt, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/_profiler, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # -> custom access control for the admin area of the URL
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login-check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # -> end

        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs

        #MEDICO
        #
        #ROLE_VEGA_ADMIN_PACIENTES_GUEST
        #ROLE_VEGA_ADMIN_ATENCIONES_EDITOR
        #ROLE_VEGA_ADMIN_PRACTICAS_ADMIN
        #
        #ADMINISTRACION
        #
        #ROLE_VEGA_ADMIN_PACIENTES_ADMIN
        #ROLE_VEGA_ADMIN_ATENCIONES_STAFF
        #ROLE_VEGA_ADMIN_MEDICOS_ADMIN

        - { path: ^/admin, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN,ROLE_VEGA_ADMIN_PACIENTES_GUEST,ROLE_VEGA_ADMIN_ATENCIONES_EDITOR,ROLE_VEGA_ADMIN_PRACTICAS_ADMIN,ROLE_VEGA_ADMIN_PACIENTES_ADMIN,ROLE_VEGA_ADMIN_ATENCIONES_STAFF,ROLE_VEGA_ADMIN_SUCURSALES_GUEST,ROLE_VEGA_ADMIN_MEDICOS_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }

parameters:
    # ... other parameters
    security.acl.permission.map.class: Sonata\AdminBundle\Security\Acl\Permission\AdminPermissionMap
